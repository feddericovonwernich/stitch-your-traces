###############################################################################
# KAFKA #
###############################################################################
kafka:
  enabled: true

  # --- Turn on KRaft -----------------------------------------------------------
  kraft:
    enabled: true

  # --- Listeners ---------------------------------------------------------------
  listeners:
    client:                 # 9092 inside the cluster
      protocol: PLAINTEXT
    controller:             # 9093 (internal use only)
      protocol: PLAINTEXT
    interbroker:            # 9094 (broker ↔ broker)
      protocol: PLAINTEXT
    external:               # 9095 (only if you expose it later)
      protocol: PLAINTEXT

  clusterId: sYrkLErnQb2p4WX7REcgtg

  overrideConfiguration:
    # Tell the broker to auto-create any topic your clients request
    auto.create.topics.enable: "true"

    # (you’ll still want your replication overrides in here too)
    offsets.topic.replication.factor: "1"
    transaction.state.log.replication.factor: "1"
    transaction.state.log.min.isr: "1"

  # --- Storage & replica counts -----------------------------------------------
  controller:
    replicaCount: 1
    persistence:
      enabled: true
      size: 5Gi

  broker:
    replicaCount: 1
    persistence:
      enabled: true
      size: 5Gi

###############################################################################
# MYSQL #
###############################################################################
mysql:
  enabled: true
  port: 3306

  auth:
    existingSecret: mysql-auth # Secret with this name needs to be present in the cluster.
    username: storyuser
    database: story_db

  primary:
    persistence:
      enabled: true
      size: 8Gi

###############################################################################
# Story Request Service #
###############################################################################
story-request-service:

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: story.feddericovonwernich.com
        paths:
          - path: /
            pathType: Prefix

  podAnnotations:
    instrumentation.opentelemetry.io/inject-java: "story-services-instrumentation"

  mysql:
    host: mysql
    auth:
      database: story_db
      existingSecret: mysql-auth
      username: storyuser

  kafka:
    host: kafka
    topic: story-requests

###############################################################################
## AI Story Creation Service #
################################################################################
ai-story-creation-service:

  podAnnotations:
    instrumentation.opentelemetry.io/inject-python: "story-services-instrumentation"

  kafka:
    host: kafka

  storyRequest:
    host: story-request-service

  env:
    kafka:
      topic: story-requests
    llmProvider:
      selected: openai
      openai:
        existingSecret: openai-api-key