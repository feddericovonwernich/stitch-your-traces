# docker-compose.yml
version: "3.7"
services:

  # ──────────────────────────────────────────────────────────────── Jaeger (Traces) ──────────────────────────────────
  jaeger:
    image: jaegertracing/jaeger:2.7.0
    container_name: jaeger
    ports:
      # Expose Jaeger UI
      - "16686:16686"
    environment:
      SAMPLER_TYPE: const
      SAMPLER_PARAM: "1"
    restart: unless-stopped

  # ──────────────────────────────────────────────────────────────── Prometheus (Metrics) ─────────────────────────────
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      # Expose Prometheus UI
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    restart: unless-stopped

  # ──────────────────────────────────────────────────────────────── Loki (Viewing Metrics) ───────────────────────────
  loki:
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki/local-config.yml
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yml:ro
    ports:
      # Expose Loki UI
      - "3100:3100"
    restart: unless-stopped

  # ──────────────────────────────────────────────────────────────── Grafana (Viewing Metrics) ────────────────────────
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      # Expose Grafana UI
      - "3000:3000"
    depends_on:
      prometheus:
        condition: service_started
      jaeger:
        condition: service_started
      loki:
        condition: service_started
    environment:
      GF_METRICS_ENABLED: "true"
      GF_METRICS_DISABLE_TOTAL_STATS: "false"
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana-storage:/var/lib/grafana

  # ──────────────────────────────────────────────────────────────── OpenTelemetry Collector ──────────────────────────
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml:ro
      
      # Collector works internally, should not be exposed.

      # ports:
      #   OTLP gRPC receiver
      #   - "4317:4317"
      #   OTLP HTTP receiver
      #   - "4318:4318"
      #   Prometheus' metrics endpoint
      #   - "8889:8889"

    depends_on:
      jaeger:
        condition: service_started
      prometheus:
        condition: service_started
      loki:
        condition: service_started
    restart: unless-stopped


volumes:
  grafana-storage: